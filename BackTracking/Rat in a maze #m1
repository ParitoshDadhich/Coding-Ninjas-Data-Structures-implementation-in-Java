import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		int maze[][] = new int[n][n];
		for(int i = 0; i < n; i++){
			for(int j = 0; j < n; j++){
				maze[i][j] = s.nextInt();
			}
		}
		System.out.println(Solution.ratInAMaze(maze));	
	}

}



public class Solution {

    static String str = "";
	public static boolean ratInAMaze(int maze[][]){

		int m = maze.length;
        int n = maze[0].length;
        int path[][] = new int[m][n];
        
        return helper(maze, 0, 0, m, n, path);
	}
    
    private static boolean helper(int maze[][], int i, int j, int m, int n, int path[][]){
        if(i == m-1 && j == n-1){
                return true;
        }
        
         if(i<0 || j<0 || i>=m || j>=n || maze[i][j] == 0 || path[i][j] == 1)
            return false;
        
        path[i][j] = 1;
        
        // top
        if(helper(maze, i-1, j, m, n, path))
            return true;
        
        // right
        if(helper(maze, i, j+1, m, n, path))
            return true;
        
        // down
        if(helper(maze, i+1, j, m, n, path))
            return true;
        
        // left
        if(helper(maze, i-1, j, m, n, path))
            return true;
        
        return false;
    }
    
}
