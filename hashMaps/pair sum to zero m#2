import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[] takeInput() throws IOException {
        int size = Integer.parseInt(br.readLine().trim());
        int[] input = new int[size];

        if (size == 0) {
            return input;
        }
        
		String[] strNums;
		strNums = br.readLine().split("\\s");
		
        for (int i = 0; i < size; ++i) {
            input[i] = Integer.parseInt(strNums[i]);
        }

        return input;
    }

    public static void printArray(int[] arr) {
        for (int element : arr) {
            System.out.print(element + " ");
        }

        System.out.println();
    }

    public static void main(String[] args) throws NumberFormatException, IOException {


        int[] arr = takeInput();
        System.out.print(Solution.PairSum(arr,arr.length));


    }
}


import java.util.*;

public class Solution{
      public static int PairSum(int[] input, int size) {
          
          int count = 0;
          HashMap<Integer, Integer> hm = new HashMap<>();
          for(int i : input){
              if(hm.containsKey(-i)){
                  int occurance = hm.get(-i);
                  for(int j=occurance; j>0; j--)
                      count++;
                  
                  if(hm.containsKey(i))
                  	hm.put(i, hm.get(i) + 1);
                  else
                      hm.put(i, 1);
              }
              else{
                  if(hm.containsKey(i))
                  	hm.put(i, hm.get(i) + 1);
                  else
                      hm.put(i, 1);
              }
          }
          
          return count;
      }
}
