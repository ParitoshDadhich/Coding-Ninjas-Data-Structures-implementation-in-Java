import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[] takeInput() throws IOException {
        int size = Integer.parseInt(br.readLine().trim());
        int[] input = new int[size];

        if (size == 0) {
            return input;
        }
        
        String[] strNums; 
        strNums = br.readLine().split("\\s");
        

        for (int i = 0; i < size; ++i) {
            input[i] = Integer.parseInt(strNums[i]);
        }

        return input;
    }

    public static void printArray(int[] arr) {
        for (int element : arr) {
            System.out.print(element + " ");
        }

        System.out.println();
    }

    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while(t > 0) {

            int[] arr1 = takeInput();
            int[] arr2 = takeInput();

            int[] output = new int[1 + Math.max(arr1.length, arr2.length)];

            Solution.sumOfTwoArrays(arr1, arr2, output);
            printArray(output);

            t -= 1;
        }
    }
}



public class Solution {

    public static void sumOfTwoArrays(int arr1[], int arr2[], int output[]) {
    	int m = arr1.length-1;
        int n = arr2.length-1;
        int k = output.length-1;
        
        int carry = 0;
        while(m >=0 && n >=0){
            int sum = carry + arr1[m] + arr2[n];
            carry = sum/10;
            output[k] = sum%10;
            
            m--;
            n--;
            k--;
        }
        
        while(m >=0){
            int sum = carry + arr1[m];
            carry = sum/10;
            output[k] = sum%10;
            
            k--;
            m--;
        }
        
          while(n >=0){
            int sum = carry + arr2[n];
            carry = sum/10;
            output[k] = sum%10;
            
            k--;
            n--;
        }
        
        output[0] = carry;       
    }

}
