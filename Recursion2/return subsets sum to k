import java.util.Scanner;

public class runner {
	static Scanner s = new Scanner(System.in);
	public static int[] takeInput() {
		int size = s.nextInt();
		int arr[] = new int[size];
		for (int i = 0; i < size; i++) {
			arr[i] = s.nextInt();
		}
		return arr;
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		int k = s.nextInt();
		int output[][] = solution.subsetsSumK(input, k);
		for(int i = 0; i < output.length; i++) {
			for(int j = 0; j < output[i].length; j++) {
				System.out.print(output[i][j] + " ");
			}
			System.out.println();
		}
	}
}



public class solution {

	public static int[][] subsetsSumK(int input[], int key) {
		return subsetsSumK(input, 0, key);
	}
    
    static int[][] subsetsSumK(int input[], int SI, int key){
        if(SI==input.length){
            if(key==0)
                return new int[1][0];
            else
                return new int[0][0];
        }
        
        int temp1[][] = subsetsSumK(input, SI+1, key);
        int temp2[][] = subsetsSumK(input, SI+1, key-input[SI]);
        
        int ans[][] = new int[temp1.length +temp2.length][];
        
        int k=0;
        for(int i=0;i<temp1.length;i++,k++){
            ans[k]=new int[temp1[i].length];
            for(int j=0;j<temp1[i].length;j++)
                ans[k][j]=temp1[i][j];
        }
        
        for(int i=0;i<temp2.length;i++,k++){
            ans[k]=new int[temp2[i].length+1];
            ans[k][0]=input[SI];
            for(int j=1;j<=temp2[i].length;j++)
                ans[k][j]=temp2[i][j-1];
        }
        
        return ans;
    }  
}
