import java.util.Scanner;

public class runner {
	
	public static int[] takeInput() {
		Scanner s = new Scanner(System.in);
		int size = s.nextInt();
		int arr[] = new int[size];
		for (int i = 0; i < size; i++) {
			arr[i] = s.nextInt();
		}
		return arr;
	}
	
	public static void main(String[] args) {
		int[] input = takeInput();
		solution.printSubsets(input);
	}
}




public class solution {
	public static void printSubsets(int input[]) {
		int output[] = new int[0];
        helper(input, 0, output);
	}
    
    private static void helper(int input[], int sI, int output[]){
        if(sI >= input.length){
            int l = output.length;
            for(int i=0; i<l; i++)
                System.out.print(output[i] + " ");
            
            System.out.println();
            return;
        }
        
        
        // appending the starting character of an input array and then copying the elements of output array;
        int l = output.length;
        int newOutput[] = new int[l+1];
        for(int i=0; i<l; i++){
            newOutput[i] = output[i];
        }
        newOutput[l] = input[sI];
        
        
        // make two recursive calls in first call starting element contributes to subsets and on another call does not ;
        
        // does not contribute;
        helper(input, sI+1, output);
        // contribute
        helper(input, sI+1, newOutput);
        
    }
    
}
