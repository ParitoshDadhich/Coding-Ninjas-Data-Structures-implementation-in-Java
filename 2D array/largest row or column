import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Runner {

    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    public static int[][] take2DInput() throws IOException {
        String[] strRowsCols = br.readLine().trim().split("\\s");
        int n_rows = Integer.parseInt(strRowsCols[0]);
        int m_cols = Integer.parseInt(strRowsCols[1]);

        if (n_rows == 0) {
            return new int[0][0];
        }


        int[][] mat = new int[n_rows][m_cols];

        for (int row = 0; row < n_rows; row++) {
            String[] strNums; 
            strNums = br.readLine().trim().split("\\s");
            
            for (int col = 0; col < m_cols; col++) {
                mat[row][col] = Integer.parseInt(strNums[col]);
            }
        }

        return mat;
    }


    public static void main(String[] args) throws NumberFormatException, IOException {
        int t = Integer.parseInt(br.readLine().trim());

        while(t > 0) {

            int[][] mat = take2DInput();

            Solution.findLargest(mat);
            System.out.println();

            t -= 1;
        }
    }
}




public class Solution {

	public static void findLargest(int arr[][]){
        
        
        if(arr.length == 0){
            System.out.println("row " + 0 + " " + Integer.MIN_VALUE);
            return;
        }
        
		int row = arr.length;
        int col = arr[0].length;
        
        int colSum = Integer.MIN_VALUE;
        int colIndex = Integer.MIN_VALUE;
        for(int j=0; j<col; j++){
            int sum = 0;
            for(int i=0; i<row; i++){
                sum += arr[i][j];
            }
            if(colSum < sum){
                colSum = sum;
                colIndex = j;
            }
        }
        
        int rowSum = Integer.MIN_VALUE;
        int rowIndex = Integer.MIN_VALUE;
        for(int i=0; i<row; i++){
            int sum = 0;
            for(int j=0; j<col; j++){
                sum += arr[i][j];
            }
            if(rowSum < sum){
                rowSum = sum;
                rowIndex = i;
            }
        }
        
        if(rowSum >= colSum)
            System.out.println("row " + rowIndex + " " + rowSum );
        else
            System.out.println("column " + colIndex + " " + colSum);
        
	}

}
